{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\crypto-viewer-app\\\\src\\\\components\\\\CoinsTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { Container, createTheme, TableCell, LinearProgress, ThemeProvider, Typography, TextField, TableBody, TableRow, TableHead, TableContainer, Table, Paper } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { CryptoState } from \"../CryptoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\nexport default function CoinsTable() {\n  _s();\n\n  var _handleSearch;\n\n  const [search, setSearch] = useState(\"\"); //used for searching the coin using its name or symbol\n\n  const [page, setPage] = useState(1);\n  const {\n    symbol,\n    coins,\n    loading\n  } = CryptoState();\n  const useStyles = makeStyles({\n    row: {\n      backgroundColor: \"#FBCEB1\",\n      cursor: \"pointer\",\n      \"&:hover\": {\n        backgroundColor: \"#B22222\"\n      },\n      fontFamily: \"Montserrat\"\n    },\n    pagination: {\n      \"& .MuiPaginationItem-root\": {\n        color: \"black\"\n      }\n    }\n  });\n  const classes = useStyles();\n  const history = useHistory(); //for handling the search and reruning the filtered coin only\n\n  const handleSearch = () => {\n    return coins.filter(coin => coin.name.toLowerCase().includes(search) || //comapring with name as well as symbol.....btc or bitcoin\n    coin.symbol.toLowerCase().includes(search));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      style: {\n        margin: 18,\n        fontFamily: \"Serif\",\n        color: \"black\"\n      },\n      children: \"Cryptocurrency Concurrent Prices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Search for the coin\",\n      variant: \"filled\",\n      style: {\n        marginBottom: 20,\n        width: \"100%\"\n      },\n      onChange: e => setSearch(e.target.value) //setting value of search state\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: loading ? /*#__PURE__*/_jsxDEV(LinearProgress, {\n        style: {\n          backgroundColor: \"yellow\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          style: {\n            backgroundColor: \"#B22222\"\n          },\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [\"Coin\", \"Price\", \"24h Change\", \"Market Cap\"].map(head => /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                color: \"black\",\n                fontWeight: \"700\",\n                fontFamily: \"Montserrat\"\n              },\n              align: head === \"Coin\" ? \"left\" : \"right\" //giving more space to the coin\n              ,\n              children: head\n            }, head, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: handleSearch().slice((page - 1) * 10, (page - 1) * 10 + 10) //1 to\n          .map(row => {\n            const profit = row.price_change_percentage_24h > 0;\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              onClick: () => history.push(`/coins/${row.id}`) //clicking on any particular coin takes us to that coin\n              ,\n              className: classes.row,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                style: {\n                  display: \"flex\",\n                  gap: 15\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: row === null || row === void 0 ? void 0 : row.image,\n                  alt: row.name,\n                  height: \"50\",\n                  style: {\n                    marginBottom: 10\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    flexDirection: \"column\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      textTransform: \"uppercase\",\n                      fontSize: 22\n                    },\n                    children: row.symbol\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: \"darkgrey\"\n                    },\n                    children: row.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [symbol, \" \", numberWithCommas(row.current_price.toFixed(2))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                style: {\n                  color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\n                  fontWeight: 500\n                },\n                children: [profit && \"+\", row.price_change_percentage_24h.toFixed(2), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [symbol, \" \", numberWithCommas(row.market_cap.toString().slice(0, -6) //removing last six digits and placing M(million)\n                ), \"M\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 25\n              }, this)]\n            }, row.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), \"//to avoid infinite list of coins\", /*#__PURE__*/_jsxDEV(Pagination, {\n      count: parseInt((((_handleSearch = handleSearch()) === null || _handleSearch === void 0 ? void 0 : _handleSearch.length) / 10).toFixed(0)) //total=100 elements/10=10 pages in total and offcourse no fraction\n      ,\n      style: {\n        padding: 20,\n        variant: \"outlined\",\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      classes: {\n        ul: classes.pagination\n      } //ul refers to the list of items-1,2,3,.....\n      ,\n      onChange: (_, value) => {\n        setPage(value);\n        window.scroll(0, 450); //scrolling the page to top(450pixel)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n}\n\n_s(CoinsTable, \"oEoSm6xfqFg8HIJKV2X83P445vE=\", true, function () {\n  return [useHistory];\n});\n\n_c = CoinsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinsTable\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/crypto-viewer-app/src/components/CoinsTable.js"],"names":["React","useState","makeStyles","Pagination","Container","createTheme","TableCell","LinearProgress","ThemeProvider","Typography","TextField","TableBody","TableRow","TableHead","TableContainer","Table","Paper","useHistory","CryptoState","numberWithCommas","x","toString","replace","CoinsTable","search","setSearch","page","setPage","symbol","coins","loading","useStyles","row","backgroundColor","cursor","fontFamily","pagination","color","classes","history","handleSearch","filter","coin","name","toLowerCase","includes","textAlign","margin","marginBottom","width","e","target","value","map","head","fontWeight","slice","profit","price_change_percentage_24h","push","id","display","gap","image","flexDirection","textTransform","fontSize","current_price","toFixed","market_cap","parseInt","length","padding","variant","justifyContent","ul","_","window","scroll"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport {Container,createTheme,TableCell,LinearProgress,ThemeProvider,Typography,TextField,TableBody,TableRow,TableHead,TableContainer,Table,Paper,} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { CryptoState } from \"../CryptoContext\";\n\nexport function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport default function CoinsTable() {\n  const [search, setSearch] = useState(\"\"); //used for searching the coin using its name or symbol\n  const [page, setPage] = useState(1);\n\n  const { symbol, coins, loading } = CryptoState();\n\n  const useStyles = makeStyles({\n    row: {\n      backgroundColor: \"#FBCEB1\",\n      cursor: \"pointer\",\n      \"&:hover\": {\n        backgroundColor: \"#B22222\",\n      },\n      fontFamily: \"Montserrat\",\n    },\n    pagination: {\n      \"& .MuiPaginationItem-root\": {\n        color: \"black\",\n      },\n    },\n  });\n\n  const classes = useStyles();\n  const history = useHistory();\n\n  \n   //for handling the search and reruning the filtered coin only\n  const handleSearch = () => {\n    return coins.filter(\n      (coin) =>\n        coin.name.toLowerCase().includes(search) ||     //comapring with name as well as symbol.....btc or bitcoin\n        coin.symbol.toLowerCase().includes(search)\n    );\n  };\n\n  return (\n      <Container style={{ textAlign: \"center\" }}>\n        <Typography\n          variant=\"h4\"\n          style={{ margin: 18, fontFamily: \"Serif\",color:\"black\" }}\n        >\n          Cryptocurrency Concurrent Prices\n        </Typography>\n        <TextField\n          label=\"Search for the coin\"\n          variant=\"filled\"\n          style={{ marginBottom: 20, width: \"100%\" }}\n          onChange={(e) => setSearch(e.target.value)} //setting value of search state\n        />\n        <TableContainer component={Paper}>\n          {loading ? (\n            <LinearProgress style={{ backgroundColor: \"yellow\" }} />\n          ) : (\n            <Table aria-label=\"simple table\">\n              <TableHead style={{ backgroundColor: \"#B22222\" }}>\n                <TableRow>\n                  {[\"Coin\", \"Price\", \"24h Change\", \"Market Cap\"].map((head) => (\n                    <TableCell\n                      style={{\n                        color: \"black\",\n                        fontWeight: \"700\",\n                        fontFamily: \"Montserrat\",\n                      }}\n                      key={head}\n                      align={head === \"Coin\" ? \"left\" : \"right\"} //giving more space to the coin\n                    >\n                      {head}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead> \n\n              <TableBody>\n                {handleSearch()\n                  .slice((page - 1) * 10, (page - 1) * 10 + 10)//1 to\n                  .map((row) => {\n                    const profit = row.price_change_percentage_24h > 0;\n                    return (\n                      <TableRow\n                        onClick={() => history.push(`/coins/${row.id}`)}//clicking on any particular coin takes us to that coin\n                        className={classes.row}\n                        key={row.name}\n                      >\n                        <TableCell\n                          component=\"th\"\n                          scope=\"row\"\n                          style={{\n                            display: \"flex\",\n                            gap: 15,\n                          }}\n                        >\n                          <img\n                            src={row?.image}\n                            alt={row.name}\n                            height=\"50\"\n                            style={{ marginBottom: 10 }}\n                          />\n                          <div\n                            style={{ display: \"flex\", flexDirection: \"column\" }}\n                          >\n                            <span\n                              style={{\n                                textTransform: \"uppercase\",\n                                fontSize: 22,\n                              }}\n                            >\n                              {row.symbol}\n                            </span>\n                            <span style={{ color: \"darkgrey\" }}>\n                              {row.name}\n                            </span>\n                          </div>\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {symbol}{\" \"}\n                          {numberWithCommas(row.current_price.toFixed(2))}\n                        </TableCell>\n                        <TableCell\n                          align=\"right\"\n                          style={{\n                            color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\n                            fontWeight: 500,\n                          }}\n                        >\n                          {profit && \"+\"}\n                          {row.price_change_percentage_24h.toFixed(2)}%\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {symbol}{\" \"}\n                          {numberWithCommas(\n                            row.market_cap.toString().slice(0, -6) //removing last six digits and placing M(million)\n                          )}\n                          M\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          )}\n        </TableContainer>\n\n        //to avoid infinite list of coins\n        \n        <Pagination\n        \n          count={parseInt((handleSearch()?.length / 10).toFixed(0))} //total=100 elements/10=10 pages in total and offcourse no fraction\n          style={{\n            padding: 20,\n            variant:\"outlined\",\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}\n          classes={{ ul: classes.pagination }}//ul refers to the list of items-1,2,3,.....\n          onChange={(_, value) => {\n            setPage(value);\n            window.scroll(0, 450); //scrolling the page to top(450pixel)\n          }}\n        />\n        </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}